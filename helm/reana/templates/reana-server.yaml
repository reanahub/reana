---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "reana.prefix" . }}-server
  namespace: {{ .Release.Namespace }}
spec:
  type: "ClusterIP"
  ports:
  - port: 80
    targetPort: 5000
    name: "http"
    protocol: TCP
  selector:
    app: {{ include "reana.prefix" . }}-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "reana.prefix" . }}-server
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ if .Values.maintenance.enabled -}} 0 {{- else -}} 1 {{- end }}
  selector:
    matchLabels:
      app: {{ include "reana.prefix" . }}-server
  template:
    metadata:
      labels:
        app: {{ include "reana.prefix" . }}-server
      annotations:
        checksum/database-config: {{ include (print $.Template.BasePath "/database-config.yaml") . | sha256sum }}
        checksum/database-secrets: {{ include (print $.Template.BasePath "/database-secrets.yaml") . | sha256sum }}
    spec:
      serviceAccountName: {{ include "reana.prefixed_infrastructure_svaccount_name" . }}
      containers:
      - name: rest-api
        image: {{ .Values.components.reana_server.image }}
        imagePullPolicy: {{ .Values.components.reana_server.imagePullPolicy }}
        ports:
        - containerPort: 5000
          name: http
        {{- if .Values.debug.enabled }}
        command: ["/bin/sh", "-c"]
        args: ["invenio run -h 0.0.0.0 -p 5000"]
        tty: true
        stdin: true
        {{- else }}
        # do not use "/bin/sh -c" here as that breaks signal propagation
        command: ["uwsgi", "--ini", "/var/reana/uwsgi/uwsgi.ini"]
        {{- end }}
        volumeMounts:
          {{- if .Values.debug.enabled }}
          - mountPath: /code/
            name: reana-code
          {{- end }}
          - mountPath: {{ .Values.shared_storage.shared_volume_mount_path }}
            name: reana-shared-volume
          {{- range $workspace_paths := .Values.workspaces.paths }}
          {{- if ne (typeOf $workspace_paths) "string" -}}
          {{- fail "The workspaces.paths should be a list of strings e.g node_host_path:pod_mount_path" -}}
          {{- end }}
          {{- $workspace_path := split ":" $workspace_paths }}
          {{- if and (ne $workspace_path._0 $.Values.shared_storage.hostpath.root_path) (ne $workspace_path._1 $.Values.shared_storage.shared_volume_mount_path) }}
          - name: {{ $workspace_path._0 | quote | replace "/" "" }}
            mountPath: {{ $workspace_path._1 }}
          {{- end }}
          {{- end }}
          - name: uwsgi-config
            mountPath: '/var/reana/uwsgi'
          - name: reana-config
            mountPath: '/var/reana/config'
        envFrom:
          - configMapRef:
              name: {{ include "reana.prefix" . }}-database-config
        env:
          - name: REANA_COMPONENT_PREFIX
            value: {{ include "reana.prefix" . }}
          - name: REANA_COMPUTE_BACKENDS
            value: {{ .Values.compute_backends | toJson | quote }}
          - name: REANA_INFRASTRUCTURE_KUBERNETES_NAMESPACE
            value: {{ .Release.Namespace }}
          - name: REANA_RUNTIME_KUBERNETES_NAMESPACE
            value: {{ .Values.namespace_runtime | default .Release.Namespace }}
          - name: REANA_DEFAULT_QUOTA_CPU_LIMIT
            value: {{ .Values.quota.default_cpu_limit | default 0 | quote }}
          - name: REANA_DEFAULT_QUOTA_DISK_LIMIT
            value: {{ .Values.quota.default_disk_limit | default 0 | quote }}
          {{- if .Values.kubernetes_jobs_max_user_memory_limit }}
          - name: REANA_KUBERNETES_JOBS_MAX_USER_MEMORY_LIMIT
            value: {{ .Values.kubernetes_jobs_max_user_memory_limit }}
          {{- end }}
          - name: REANA_KUBERNETES_JOBS_MAX_USER_TIMEOUT_LIMIT
            value: !!str {{ .Values.kubernetes_jobs_max_user_timeout_limit | default 1209600 }}  # 1209600 seconds = 14 days
          - name: REANA_INTERACTIVE_SESSION_MAX_INACTIVITY_PERIOD
            value: {{ .Values.interactive_sessions.maximum_inactivity_period | default "forever" | quote }}
          - name: REANA_INTERACTIVE_SESSIONS_ENVIRONMENTS
            value: {{ .Values.interactive_sessions.environments | toJson | quote }}
          - name: REANA_VETTED_CONTAINER_IMAGES
            value: {{ .Values.vetted_container_images | toJson | quote }}
          - name: REANA_KUBERNETES_JOBS_TIMEOUT_LIMIT
            value: !!str {{ .Values.kubernetes_jobs_timeout_limit | default 604800 }}  # 604800 seconds = 7 days
          - name: REANA_KUBERNETES_JOBS_MEMORY_LIMIT
            value: {{ .Values.kubernetes_jobs_memory_limit | default "4Gi" }}
          - name: DASK_ENABLED
            value: {{ .Values.dask.enabled | quote }}
          {{- if .Values.dask.enabled }}
          - name: DASK_AUTOSCALER_ENABLED
            value: {{ .Values.dask.autoscaler_enabled | quote | default "true" }}
          - name: REANA_DASK_CLUSTER_MAX_MEMORY_LIMIT
            value: {{ .Values.dask.cluster_max_memory_limit | default "16Gi" }}
          - name: REANA_DASK_CLUSTER_DEFAULT_NUMBER_OF_WORKERS
            value: !!str {{ .Values.dask.cluster_default_number_of_workers | default 2 }}
          - name: REANA_DASK_CLUSTER_MAX_NUMBER_OF_WORKERS
            value: !!str {{ .Values.dask.cluster_max_number_of_workers | default 20 }}
          - name: REANA_DASK_CLUSTER_DEFAULT_SINGLE_WORKER_MEMORY
            value: {{ .Values.dask.cluster_default_single_worker_memory | default "2Gi" }}
          - name: REANA_DASK_CLUSTER_MAX_SINGLE_WORKER_MEMORY
            value: {{ .Values.dask.cluster_max_single_worker_memory | default "8Gi" }}
          - name: REANA_DASK_CLUSTER_DEFAULT_SINGLE_WORKER_THREADS
            value: !!str {{ .Values.dask.cluster_default_single_worker_threads | default 4 }}
          - name: REANA_DASK_CLUSTER_MAX_SINGLE_WORKER_THREADS
            value: !!str {{ .Values.dask.cluster_max_single_worker_threads | default 8 }}
          {{- end }}
          - name: WORKSPACE_PATHS
            value: {{ .Values.workspaces.paths | toJson | quote }}
          - name: WORKSPACE_RETENTION_PERIOD
            value: {{ .Values.workspaces.retention_rules.maximum_period | default "forever" | quote }}
          {{- if .Values.quota.enabled }}
          - name: REANA_WORKFLOW_TERMINATION_QUOTA_UPDATE_POLICY
            value: {{ tpl .Values.quota.workflow_termination_update_policy . | default "null" }}
          {{- end }}
          {{- range $key, $value := .Values.components.reana_server.environment }}
          - name: {{ $key }}
            value: {{ $value | quote }}
          {{- end }}
          {{- if .Values.reana_hostname }}
          - name: REANA_HOSTNAME
            value: {{ .Values.reana_hostname }}
          {{- end }}
          - name: CERN_CONSUMER_KEY
            valueFrom:
              secretKeyRef:
                name: {{ include "reana.prefix" . }}-cern-sso-secrets
                key: CERN_CONSUMER_KEY
          - name: CERN_CONSUMER_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ include "reana.prefix" . }}-cern-sso-secrets
                key: CERN_CONSUMER_SECRET
          {{- if .Values.login }}
          - name: LOGIN_PROVIDERS_CONFIGS
            value: {{ .Values.login | toJson | quote }}
          - name: LOGIN_PROVIDERS_SECRETS
            valueFrom:
              secretKeyRef:
                name: {{ include "reana.prefix" $ }}-login-provider-secrets
                key: PROVIDER_SECRETS
          {{- end }}
          - name: REANA_GITLAB_OAUTH_APP_ID
            valueFrom:
              secretKeyRef:
                name: {{ include "reana.prefix" . }}-cern-gitlab-secrets
                key: REANA_GITLAB_OAUTH_APP_ID
          - name: REANA_GITLAB_OAUTH_APP_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ include "reana.prefix" . }}-cern-gitlab-secrets
                key: REANA_GITLAB_OAUTH_APP_SECRET
          - name: REANA_GITLAB_HOST
            valueFrom:
              secretKeyRef:
                name: {{ include "reana.prefix" . }}-cern-gitlab-secrets
                key: REANA_GITLAB_HOST
          - name: REANA_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: {{ include "reana.prefix" . }}-secrets
                key: REANA_SECRET_KEY
          - name: REANA_CACHE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "reana.prefix" . }}-cache-secrets
                key: password
          - name: RABBIT_MQ_USER
            valueFrom:
              secretKeyRef:
                name: {{ include "reana.prefix" . }}-message-broker-secrets
                key: user
          - name: RABBIT_MQ_PASS
            valueFrom:
              secretKeyRef:
                name: {{ include "reana.prefix" . }}-message-broker-secrets
                key: password
          {{- if .Values.debug.enabled }}
          # Disable CORS in development environment, for example
          # to connect from an external React application.
          - name: INVENIO_CORS_SEND_WILDCARD
            value: "False"
          - name: INVENIO_CORS_SUPPORTS_CREDENTIALS
            value: "True"
          - name: WDB_SOCKET_SERVER
            value: "{{ include "reana.prefix" . }}-wdb"
          - name: WDB_NO_BROWSER_AUTO_OPEN
            value: "True"
          - name: FLASK_ENV
            value:  "development"
          # Hack to not verify SSL connections https://stackoverflow.com/questions/48391750/disable-python-requests-ssl-validation-for-an-imported-module
          - name: CURL_CA_BUNDLE
            value: ""
          - name: GIT_SSL_NO_VERIFY
            value: "true"
          {{- end }}
          - name: REANA_DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ include "reana.prefix" . }}-db-secrets
                key: user
          - name: REANA_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "reana.prefix" . }}-db-secrets
                key: password
          - name: REANA_NOTIFICATIONS_ENABLED
            value: "{{ .Values.notifications.enabled }}"
          {{- if .Values.notifications.enabled }}
          - name: REANA_EMAIL_RECEIVER
            value: {{ .Values.notifications.email_config.receiver }}
          - name: REANA_EMAIL_SENDER
            value: {{ .Values.notifications.email_config.sender }}
          - name: REANA_EMAIL_SMTP_SERVER
            value: {{ .Values.notifications.email_config.smtp_server | default (printf "%s-mail" (include "reana.prefix" .)) }}
          - name: REANA_EMAIL_SMTP_PORT
            value: "{{ .Values.notifications.email_config.smtp_port | default "30025" }}"
          - name: REANA_EMAIL_SMTP_SSL
            value: {{ .Values.notifications.email_config.smtp_ssl | quote }}
          {{- if .Values.debug.enabled }}
          - name: REANA_EMAIL_SMTP_STARTTLS
            value: "false"
          {{- else }}
          - name: REANA_EMAIL_SMTP_STARTTLS
            value: {{ .Values.notifications.email_config.smtp_starttls | quote }}
          - name: REANA_EMAIL_LOGIN
            valueFrom:
              secretKeyRef:
                name: {{ include "reana.prefix" . }}-mail-notification-sender-password
                key: REANA_EMAIL_LOGIN
          - name: REANA_EMAIL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "reana.prefix" . }}-mail-notification-sender-password
                key: REANA_EMAIL_PASSWORD
          {{- end }}
          {{- end }}
      - name: scheduler
        image: {{ .Values.components.reana_server.image }}
        imagePullPolicy: {{ .Values.components.reana_server.imagePullPolicy }}
        command: ["flask", "start-scheduler"]
        volumeMounts:
          {{- if .Values.debug.enabled }}
          - mountPath: /code/
            name: reana-code
          {{- end }}
          - mountPath: {{ .Values.shared_storage.shared_volume_mount_path }}
            name: reana-shared-volume
        envFrom:
          - configMapRef:
              name: {{ include "reana.prefix" . }}-database-config
        env:
        - name: REANA_COMPONENT_PREFIX
          value: {{ include "reana.prefix" . }}
        - name: REANA_INFRASTRUCTURE_KUBERNETES_NAMESPACE
          value: {{ .Release.Namespace }}
        - name: REANA_RUNTIME_KUBERNETES_NAMESPACE
          value: {{ .Values.namespace_runtime | default .Release.Namespace }}
        {{- range $key, $value := .Values.components.reana_server.environment }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        {{- if .Values.debug.enabled }}
        # Disable CORS in development environment, for example
        # to connect from an external React application.
        - name: INVENIO_CORS_SEND_WILDCARD
          value: "False"
        - name: INVENIO_CORS_SUPPORTS_CREDENTIALS
          value: "True"
        - name: WDB_SOCKET_SERVER
          value: "{{ include "reana.prefix" . }}-wdb"
        - name: WDB_NO_BROWSER_AUTO_OPEN
          value: "True"
        - name: FLASK_ENV
          value:  "development"
        # Hack to not verify SSL connections https://stackoverflow.com/questions/48391750/disable-python-requests-ssl-validation-for-an-imported-module
        - name: CURL_CA_BUNDLE
          value: ""
        - name: GIT_SSL_NO_VERIFY
          value: "true"
        {{- end }}
        - name: REANA_DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ include "reana.prefix" . }}-db-secrets
              key: user
        - name: REANA_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "reana.prefix" . }}-db-secrets
              key: password
        {{- if .Values.login }}
        - name: LOGIN_PROVIDERS_CONFIGS
          value: {{ .Values.login | toJson | quote }}
        - name: LOGIN_PROVIDERS_SECRETS
          valueFrom:
            secretKeyRef:
              name: {{ include "reana.prefix" $ }}-login-provider-secrets
              key: PROVIDER_SECRETS
        {{- end }}
        - name: RABBIT_MQ_USER
          valueFrom:
            secretKeyRef:
              name: {{ include "reana.prefix" . }}-message-broker-secrets
              key: user
        - name: RABBIT_MQ_PASS
          valueFrom:
            secretKeyRef:
              name: {{ include "reana.prefix" . }}-message-broker-secrets
              key: password
      volumes:
      - name: reana-shared-volume
        {{- if not (eq .Values.shared_storage.backend "hostpath") }}
        persistentVolumeClaim:
          claimName: {{ include "reana.prefix" . }}-shared-persistent-volume
          readOnly: false
        {{- else }}
        hostPath:
          path:  {{ .Values.shared_storage.hostpath.root_path }}
        {{- end }}
      {{- if .Values.debug.enabled }}
      - name: reana-code
        hostPath:
          path: /code/reana-server
      {{- end }}
      - name: uwsgi-config
        configMap:
          defaultMode: 420
          name: uwsgi-config
      - name: reana-config
        configMap:
          defaultMode: 420
          name: reana-config
      {{- if .Values.node_label_infrastructure }}
      {{- $full_label := split "=" .Values.node_label_infrastructure }}
      nodeSelector:
        {{ $full_label._0 }}: {{ $full_label._1 }}
      {{- end }}
      {{- range $workspace_paths := .Values.workspaces.paths }}
      {{- $workspace_path := split ":" $workspace_paths }}
      {{- if and (ne $workspace_path._0 $.Values.shared_storage.hostpath.root_path) (ne $workspace_path._1 $.Values.shared_storage.shared_volume_mount_path) }}
      - name: {{ $workspace_path._0 | quote | replace "/" "" }}
        hostPath:
          path: {{ $workspace_path._0 }}
      {{- end }}
      {{- end }}
