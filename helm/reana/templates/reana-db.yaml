{{- if .Values.components.reana_db.enabled }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "reana.prefix" . }}-db
  namespace: {{ .Release.Namespace }}
spec:
  type: ClusterIP
  selector:
    app: {{ include "reana.prefix" . }}-db
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "reana.prefix" . }}-db
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ if .Values.maintenance.enabled -}} 0 {{- else -}} 1 {{- end }}
  selector:
    matchLabels:
      app: {{ include "reana.prefix" . }}-db
  template:
    metadata:
      labels:
        app: {{ include "reana.prefix" . }}-db
    spec:
      containers:
      - name: db
        image: {{ .Values.components.reana_db.image }}
        args:
        - -c
        - max_connections=300
        ports:
        - containerPort: 5432
        env:
        - name: TZ
          value: "Europe/Zurich"
        - name: POSTGRES_DB
          value: reana
        {{- if not .Values.debug.enabled }}
        - name: POSTGRES_USER
          value: reana
        - name: POSTGRES_PASSWORD
          value: reana
        {{- else }}
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: {{ include "reana.prefix" . }}-db-secrets
              key: user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "reana.prefix" . }}-db-secrets
              key: password
        {{- end }}
        resources:
          {{- with .Values.components.reana_db.resources }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
        volumeMounts:
          - mountPath: /var/lib/postgresql/data
            subPath: db
            name: reana-infrastructure-volume
      volumes:
        - name: reana-infrastructure-volume
          {{- include "reana.infrastructure_volume" . | nindent 10 }}
      {{- if .Values.node_label_infrastructuredb }}
      {{- $full_label := split "=" .Values.node_label_infrastructuredb }}
      nodeSelector:
        {{ $full_label._0 }}: {{ $full_label._1 }}
      {{- else if .Values.node_label_infrastructure }}
      {{- $full_label := split "=" .Values.node_label_infrastructure }}
      nodeSelector:
        {{ $full_label._0 }}: {{ $full_label._1 }}
      {{- end }}
{{- end }}
